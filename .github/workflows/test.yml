name: 编译arm

on:
  #schedule:
    #- cron: '0 3,20 * * *'
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
  TZ: Asia/Shanghai
jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - armv7-unknown-linux-gnueabihf
    steps:
     
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo install cross --git https://github.com/cross-rs/cross
      - 
        name: 编译
        run: |
          cross build --target armv7-unknown-linux-gnueabihf --release
          cross rustc --target armv7-unknown-linux-gnueabihf --release -- -C lto
          armv7-linux-gnueabihf-gcc --version
          #mkdir -p ./musl_gcc 
          #wget -c https://musl.cc/mipsel-linux-musl-cross.tgz -P ./musl_gcc/
          #tar zxf ./musl_gcc/mipsel-linux-musl-cross.tgz -C ./musl_gcc/
          #sudo ln -s $(pwd)/musl_gcc/mipsel-linux-musl-cross/bin/*gcc /usr/bin/
          rustup target add armv7-unknown-linux-gnueabihf
          cat >>~/.cargo/config <<EOF
          [target.armv7-unknown-linux-gnueabihf]
          linker = "armv7-linux-gnueabihf-gcc"
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]
          EOF
          git clone https://github.com/lbl8603/vnt.git /opt/vnt
          git clone https://github.com/lmq8267/cloudflared.git /opt/st
          tar -xvf /opt/st/upx-3.95-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-3.95-amd64_linux/upx
          chmod 777 /opt/st/strip
          mkdir -p /opt/vnt-mipsel
          cd /opt/vnt
          target_os = "linux"
          #sed -i '/[target.'cfg(target_os = "windows")'.dependencies]/d' ./vnt-cli/Cargo.toml
          #sed -i '/winapi = { version = "0.3.9", features = ["handleapi", "processthreadsapi", "winnt", "securitybaseapi", "impl-default"] }/d' ./vnt-cli/Cargo.toml
          cross build --package vnt-cli --target=armv7-unknown-linux-gnueabihf --release --features default
          cd /opt/vnt/target/armv7-unknown-linux-gnueabihf/release
          file vnt-cli
          echo "build_time=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
      - 
        name: 发布
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.c8 }}
          body: |
           > ### 编译时间 ：${{ env.build_time }}

           ### *
          tag_name: armtest
          files: |
              /opt/vnt/target/armv7-unknown-linux-gnueabihf/release/vnt-cli
      - 
       name: 删除工作流
       uses: GitRML/delete-workflow-runs@main
       with:
        token: ${{ secrets.c8 }}
        retain_days: 2
        keep_minimum_runs: 0
